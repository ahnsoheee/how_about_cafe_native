<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.springboot.howaboutcafe.mapper.ReviewMapper">

    <insert id="insertReview" parameterType="com.springboot.howaboutcafe.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="review_id">
        INSERT INTO REVIEW(cafe_id, user_id, star, content, image) VALUES(#{cafe_id}, #{user_id}, #{star}, #{content}, #{image});
    </insert>

    <select id="findByCafe" parameterType="int" resultType="com.springboot.howaboutcafe.dto.ReviewDTO">
        SELECT r.review_id, r.cafe_id, r.user_id, u.user_name, r.star, r.content, r.updated_at, r.created_at, r.image 
        FROM REVIEW r, USER u 
        WHERE r.user_id=u.user_id 
            AND r.cafe_id=#{cafe_id} 
            AND r.isDeleted=0 
        ORDER BY created_at DESC;
    </select>

    <select id="findByUser" parameterType="String" resultType="com.springboot.howaboutcafe.dto.ReviewDTO">
        SELECT r.review_id, r.cafe_id, u.user_name, r.user_id, r.star, r.content, r.updated_at, r.created_at, r.image, c.cafe_name
        FROM REVIEW r 
            LEFT OUTER JOIN USER u ON r.user_id = u.user_id
            LEFT OUTER JOIN CAFE c ON r.cafe_id = c.cafe_id
        WHERE r.isDeleted = 0 AND u.user_id = #{user_id}
        ORDER BY r.created_at DESC
    </select>

    <select id="findByReviewId" parameterType="int" resultType="com.springboot.howaboutcafe.dto.ReviewDTO">
        SELECT review_id, content, star, image
        FROM REVIEW
        WHERE review_id=#{review_id};
    </select>

    <update id="deleteReview" parameterType="int">
        UPDATE REVIEW SET isDeleted=1 WHERE review_id=#{review_id};
    </update>
    
    <!--<insert id="insertImage" parameterType="com.springboot.howaboutcafe.dto.ImageDTO">
        INSERT INTO IMAGE(review_id, cafe_id, path) VALUES(#{review_id}, #{cafe_id}, #{path});
    </insert>-->

    <update id="editReview" parameterType="com.springboot.howaboutcafe.dto.ReviewDTO">
        UPDATE REVIEW 
        SET star=#{star}, content=#{content}, image=#{image}
        WHERE review_id=#{review_id}
    </update>

    <select id="validateDate" parameterType="int" resultType="int">
        SELECT count(review_id)
        FROM REVIEW
        WHERE review_id=#{review_id} AND updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);
    </select>

    <select id="getImage" parameterType="int" resultType="com.springboot.howaboutcafe.dto.ImageDTO">
        SELECT review_id, cafe_id, image
        FROM REVIEW
        WHERE cafe_id=#{cafe_id} 
            AND image IS NOT NULL 
            AND isDeleted=0
        ORDER BY created_at DESC;
    </select>

</mapper>